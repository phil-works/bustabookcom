import React, { useMemo } from "react";
import { useState, useEffect, createContext, useContext, useReducer } from 'react';
import { Col, Container, Row } from "reactstrap";
import EventCard from './EventCard'
import algosdk from 'algosdk';
import { Buffer } from 'buffer';
import { EventData, GlobalData,  LocalData } from '../context/interfaces';

window.Buffer = Buffer;


function useGlobalSource(): {
    globals: GlobalData.ListedEvents[];
} {
    const [globals, setGlobals] = useState<GlobalData.ListedEvents[]>([]);

    useEffect(() => {
      fetch("https://node.algoexplorerapi.io/v2/applications/1022971265")
      .then((response) => response.json())
      .then((data) => setGlobals(data.params["global-state"].filter((item: any) => item.key !== "VGl0bGU=" ))); 

    }, []);
    return { globals}
}
  
const GlobalContext = createContext<ReturnType<typeof useGlobalSource>>( 
    {} as unknown as ReturnType<typeof useGlobalSource>
);
  
function useGlobals() {
    return useContext(GlobalContext);  
}
  
function SomethingLocal(eventLine: any ) {
    const eventLineA: GlobalData.KeyValue = eventLine
    const eventName = new Buffer(eventLineA.key, 'base64').toString('utf8');
    const pretty_address = algosdk.encodeAddress(new Buffer(eventLineA.value.bytes, 'base64'));    
    const [localData, setLocal] = useState<LocalData.EventDetails[]>([]);
  
    useEffect(() => {
        fetch("https://node.algoexplorerapi.io/v2/accounts/" + pretty_address + "/applications/1022971265")
        .then((response) => response.json())
        .then((data) => setLocal(data["app-local-state"]["key-value"]));
      }, []);
    

    return(
      <Col>{EventCard(localData)}</Col>
    );
  
  }

  const GlobalList = () => {
    const { globals } = useGlobals();  
    return(
      <div>
        <Row xs="4">
            {globals.map((listedEvent) => (  SomethingLocal(listedEvent) ))}
        </Row>
      </div>
    );
  };


function CardBox() {   
  
    return(
        <div>      
        <GlobalContext.Provider value={useGlobalSource()}>
            <Container className="text-center">
                <br />
                <GlobalList />
            </Container>
        </GlobalContext.Provider> 
        </div>
    );

}

export default CardBox;